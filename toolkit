#!/bin/bash

# Oneplus 3 root tookit version 1.0

# Website: https://j2java.net
# Source: https://github.com/black-dragon74/Oneplus3_Toolkit_Linux
# Author: black.dragon74

# Variable Declarations
author=black.dragon74
sVersion=1.2
home=$(echo $HOME)
mName=$(uname -n)

# Functions for the program. Let's start by decalring some basic functions.
function printHeader(){
	echo -e "Oneplus 3 tookit version $sVersion running on $mName."
}

function printHelp(){
	printHeader
	echo usage\: toolkit [help]\|[-h] Prints help\(this\) information.
	echo \ \ \ \ \ \ \ toolkit [install][force]\|[-i][--force] Installs/Force Installs the toolkit to system.
	echo \ \ \ \ \ \ \ toolkit [backup]\|[-b] Generates a backup of your Anroid.
	echo \ \ \ \ \ \ \ toolkit [restore]\|[-r] Restores created backup.
	echo \ \ \ \ \ \ \ toolkit [unlock]\|[-u] Unlock the bootloader of your device.
	echo \ \ \ \ \ \ \ toolkit [lock]\|[-l] Locks the bootloader of your device.
	echo \ \ \ \ \ \ \ toolkit [twrp]\|[-t] Flashes TWRP to your device.
	echo \ \ \ \ \ \ \ toolkit [boottwrp]\|[-bt] Hotboots TWRP without actually flashing it.
	echo \ \ \ \ \ \ \ toolkit [stock]\|[-s] Flashes stock recovery to your device.
	echo \ \ \ \ \ \ \ tookit [check]\|[-c] Check the bootloader status.
	echo \ \ \ \ \ \ \ toolkit [update]\|[-up] Update the script version.
}

function abortError(){
	echo -e "Error occoured. Aborting..."
	exit
}

function abortSuccess(){
	echo -e "Program completed successfully..."
	exit
}

function checkADB(){
	if [ -e /usr/bin/adb ];
		then
		# Consume
		sleep 0.5
	else
		echo -e "ADB Not found."
		abortError
	fi
}

function checkFastboot(){
	if [ -e /usr/bin/fastboot ];
		then
		# Consume
		sleep 0.5
	else
		echo -e "Fastboot not found."
		abortError
	fi
}

function checkVersion(){
	echo -e "$sVersion"
}

function updateScript(){
	echo -e "Checking version on the remote."
	cd $home
	curl -o scriptVersion https://raw.githubusercontent.com/black-dragon74/Oneplus3_Toolkit_Linux/master/scriptVersion &>/dev/null
	chmod 755 ./scriptVersion
	if [ $(cat ./scriptVersion) == $(toolkit -v) ];
		then
		echo -e "Script is already updated."
		rm ./scriptVersion
	else
		echo -e "Updating Script..."
		echo -e "Downloading latest version."
		cd $home
		curl -o toolkit https://raw.githubusercontent.com/black-dragon74/Oneplus3_Toolkit_Linux/master/toolkit &>/dev/null
		sudo rm /usr/bin/toolkit
		chmod 755 ./toolkit
		sudo cp ./toolkit /usr/bin/
		echo -e "Script updated."
		rm ./toolkit
		verifyUpdate
	fi
}

function installToolkit(){
	# Check if the install is forced
	if [[ $2 == "force" || $2 == "--force" ]];
		then
		case $2 in
			[fF][oO][rR][cC][eE]|[-][-][fF][oO][rR][cC][eE] )
				echo -e "Forcing toolkit install."
				# Check toolkit in local dir
				if [ -e ./toolkit ];
					then
					sudo rm /usr/bin/toolkit
					sudo cp ./toolkit /usr/bin/
					sudo chmod 755 /usr/bin/toolkit
					sudo cp ./adb /usr/bin &>/dev/null
					sudo cp ./fastboot /usr/bin &>/dev/null
					sudo chmod 755 /usr/bin/adb && sudo chmod 755 /usr/bin/fastboot
					rm $home/.android/adb_usb.ini
					echo "0x2a70" >> $home/.android/adb_usb.ini
					echo -e "Toolkit installed."
				else
					echo -e "Toolkit not found in current working dir."
					abortError
				fi
				;;
			* )	
				echo -e "Invalid option $2"
				;;
		esac
	else
		echo -e "Trying to install the toolkit."
		# Check if installed already.
		if [ -e /usr/bin/toolkit ];
			then
			echo -e "Toolkit is already installed."
			echo -e "It is recommended to run update utility."
			echo -e "Else you can force the update by using --force arg."
		else
			echo -e "Installing toolkit."
			# Check toolkit
			if [ -e ./toolkit ];
				then
				sudo cp ./toolkit /usr/bin/
				sudo chmod 755 /usr/bin/toolkit
				sudo cp ./adb /usr/bin &>/dev/null
				sudo cp ./fastboot /usr/bin &>/dev/null
				sudo chmod 755 /usr/bin/adb && sudo chmod 755 /usr/bin/fastboot
				rm $home/.android/adb_usb.ini
				echo "0x2a70" >> $home/.android/adb_usb.ini
				echo -e "Toolkit Installed."
			else
				echo -e "Toolkit not found in current dir."
				abortError
			fi
		fi
	fi
}

function verifyUpdate(){
	echo -e "Verifying Update."
	cd $home
	curl -o scriptVersion https://raw.githubusercontent.com/black-dragon74/Oneplus3_Toolkit_Linux/master/scriptVersion &>/dev/null
	chmod 755 ./scriptVersion
	if [ $(cat ./scriptVersion) == $(toolkit -v) ];
		then
		echo -e "Update verified."
	else
		echo -e "Toolkit is not up to date."
		echo -e "Run Update utility again."
	fi
	rm ./scriptVersion
}

function checkInstall(){
	if [ -e /usr/bin/toolkit ];
		then
		#Proceed
		sleep 0.5
	else
		echo -e "Toolkit is not installed."
		echo -e "Please run toolkit -i to install from downloaded directory."
		abortError
	fi
}

function createBackup(){
	checkReqs
	echo -e "Waiting for Device."
	adb wait-for-device &>/dev/null
	echo -e "Device found. Backing up."
	cd $home
	adb backup -all
	echo -e "Backup Complete."
	echo -e "File will be located in $home"
	abortSuccess
}

function checkReqs(){
	printHeader
	checkADB
	checkFastboot
	checkInstall
}

function main(){
	case $1 in
		[iI][nN][sS][tT][aA][lL]|[-][iI] )
			installToolkit $1 $2
			;;
		[hH][eE][lL][pP]|[-][hH] )
			printHelp
			;;
		[bB][aA][cC][kK][uU][pP]|[-][bB] )
			createBackup
			;;
		[rR][eE][sS][tT][oO][rR][eE]|[-][rR] )
			restoreBackup
			;;
		[uU][nN][lL][oO][cC][kK]|[-][uU] )
			unlockDevice
			;;
		[lL][oO][cC][kK]|[-][lL] )
			lockDevice
			;;
		[tT][wW][rR][pP]|[-][tT] )
			flashTwrp
			;;
		[bB][oO][oO[tT][tT][wW][rR][pP]|[-][bB][tT] )
			boottwrp
			;;
		[sS][tT][oO][cC][kK]|[-][sS] )
			flashStock
			;;
		[cC][hH][eE][cC][kK]|[-][cC] )
			checkBootloader
			;;
		[uU][pP][dD][aA][tT][eE]|[-][uU][pP] )
			updateScript
			;;
		[-][vV] )
			checkVersion
			;;	
		* )
			printHelp
			;;
	esac										
}

#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#++++++++++++           READ ARGS AND START PROGRAM          ++++++++++++++++
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

main $1 $2